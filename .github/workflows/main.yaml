name: main
on:
  push:
    branches:
      - main
    tags:
      - "*"
  pull_request:
concurrency:
  group: ${{ github.ref }}-${{ github.workflow }}
  cancel-in-progress: true
jobs:
  pre-commit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
        with:
          set-safe-directory: true
      - uses: actions/setup-python@v5
      - uses: pre-commit/action@v3.0.1
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: macos-latest
            test_cmd: DEBUG=* npm test
          - os: ubuntu-latest
            test_cmd: DEBUG=* xvfb-run -a npm test
          - os: windows-latest
            test_cmd: DEBUG=* ROOT="../../" npm test
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-node@v5
        with:
          node-version: 22
          cache: "npm"
      - run: npm ci
      - run: ${{ matrix.test_cmd }}
        shell: bash
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-node@v5
        with:
          node-version: 22
          cache: "npm"
      - run: npm ci
      - run: npm run package
      - run: mv infinity-viewer*.vsix infinity-viewer.vsix
      - name: Archive release artifacts
        uses: actions/upload-artifact@v4
        with:
          name: infinity-viewer.vsix
          path: infinity-viewer.vsix
  release:
    needs: [build, test, pre-commit]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
      tag_name: ${{ steps.get_tag.outputs.git_tag }}
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 0
      - name: Get the tag
        id: get_tag
        run: echo ::set-output name=git_tag::${GITHUB_REF/refs\/tags\//}
      - name: Create Release
        id: create_release
        uses: ncipollo/release-action@v1.18.0
        with:
          generateReleaseNotes: true
          prerelease: ${{ startsWith(steps.get_tag.outputs.git_tag, 'nightly') }}
  upload:
    needs: [release]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
    steps:
      - uses: actions/download-artifact@v5
        with:
          name: infinity-viewer.vsix
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.release.outputs.upload_url }}
          asset_path: infinity-viewer.vsix
          asset_name: infinity-viewer.vsix
          asset_content_type: application/octet-stream
  publish:
    needs: [upload]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-node@v5
        with:
          node-version: 22
          cache: "npm"
      - run: npm ci
      - run: npm run package
      - name: Publish
        run: npm run deploy
        env:
          VSCE_PAT: ${{ secrets.VSCE_PAT }}
